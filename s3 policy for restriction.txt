# How can I secure the files in my Amazon S3 bucket?
1) Restrict access to your S3 resources-

Note:- By default, all S3 buckets are private and can be accessed only by users who are explicitly granted access.

@ Do the following to restrict access to your S3 buckets or objects:

>> Write IAM user policies that specify the users that can access specific buckets and objects.
  IAM policies provide a programmatic way to manage Amazon S3 permissions for multiple users.

>> Write bucket policies that define access to specific buckets and objects. Use a bucket policy to grant access across AWS accounts, grant public or anonymous permissions,
   and allow or block access based on conditions. 
Note: You can use a deny statement in a bucket policy to restrict access to specific IAM users. You can restrict access even if the users are granted access in an IAM policy.

>> Use Amazon S3 Block Public Access as a centralized way to limit public access. Block Public Access settings override bucket policies and object permissions.
 
>> Set access control lists (ACLs) on your buckets and objects.

Note: If we need a programmatic way to manage permissions, use IAM policies or bucket policies instead of ACLs.
      However, we can use ACLs when our bucket policy exceeds the 20 KB maximum file size. 
      Also, we can use ACLs to grant access for Amazon S3 server access logs or Amazon CloudFront logs.

@ In addition to using policies, Block Public Access, and ACLs, We can also restrict access to specific actions in these ways:

>> Turn on MFA delete. This requires a user to authenticate using a multi-factor authentication (MFA) device before deleting an object or disabling bucket versioning.

>> Set up MFA-protected API access. This requires that users authenticate with an AWS MFA device before they call certain Amazon S3 API operations.

>> If we temporarily share an S3 object with another user, create a presigned URL to grant time-limited access to the object.

2) Allow or Deny S3 bucket access for particular Source IP 
3) Allow or Deny S3 bucket access for particular Source HTTPS OR HTTP Request


# Monitor our S3 resources:-
Turn on logging and monitor your S3 resources in these ways:

>> Configure AWS CloudTrail logs. By default, CloudTrail tracks only bucket-level actions. To track object-level actions (such as GetObject), turn on Amazon S3 data events.

>> Turn on Amazon S3 server access logging. 

>> Use AWS Config to monitor bucket ACLs and bucket policies for any violations that allow public read or write access.

>> Use AWS IAM Access Analyzer to review bucket or IAM policies that grant access to our S3 resources from another AWS account.

>> Use Amazon Macie to automate the identification of sensitive data stored in your buckets, broad access to your buckets, and unencrypted buckets in your account.

>> Use CloudTrail with other services, such as CloudWatch or AWS Lambda, to invoke specific processes when certain actions are taken on your S3 resources.
# Create access point
Amazon S3 Access points simplify managing data access at scale for shared datasets in S3.
 Access points are named network endpoints that are attached to buckets that you can use to perform S3 object operations.
@ we can allow access in two ways-
1) Network origin
Virtual private cloud (VPC)
No internet access. Requests are made over a specified VPC only.
2) Internet
# Use encryption to protect our data:-
 If our use case requires encryption during transmission, use HTTPS protocol. This encrypts data in transit to and from Amazon S3. All AWS SDKs and AWS tools use HTTPS by default.
 If our use case requires encryption for data at rest, use server-side encryption (SSE). The SSE options include SSE-S3, SSE-KMS, or SSE-C.
 You can specify the SSE parameters when you write objects to the bucket. You can also enable default encryption on your bucket with SSE-S3 or SSE-KMS.





